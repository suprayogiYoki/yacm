generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             Int             @id @default(autoincrement())
  username       String
  email          String          @unique
  password       String
  first_name     String?
  last_name      String?
  is_active      Boolean?        @default(true)
  email_verified Boolean?        @default(false)
  last_login     DateTime?
  created_at     DateTime?
  updated_at     DateTime?
  tenant_id      Int?
  UserRole       UserRole[]
  PasswordReset  PasswordReset[]
  Session        Session[]
  AuditLog       AuditLog[]
  Notification   Notification[]
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String?
  description    String?
  is_default     Boolean?         @default(false)
  UserRole       UserRole[]
  RolePermission RolePermission[]
}

model Permission {
  id             Int              @id @default(autoincrement())
  code           String?
  description    String?
  RolePermission RolePermission[]
}

model UserRole {
  id      Int   @id @default(autoincrement())
  user_id Int?
  User    User? @relation(fields: [user_id], references: [id])
  role_id Int?
  Role    Role? @relation(fields: [role_id], references: [id])
}

model RolePermission {
  id            Int         @id @default(autoincrement())
  role_id       Int?
  Role          Role?       @relation(fields: [role_id], references: [id])
  permission_id Int?
  Permission    Permission? @relation(fields: [permission_id], references: [id])
}

model PasswordReset {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  User       User?     @relation(fields: [user_id], references: [id])
  token      String?
  expires_at DateTime?
  used       Boolean?  @default(false)
}

model Session {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  User          User?     @relation(fields: [user_id], references: [id])
  token         String?
  device_info   Json?
  created_at    DateTime?
  expires_at    DateTime?
  last_activity DateTime?
}

model AuditLog {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  User          User?     @relation(fields: [user_id], references: [id])
  action        String?
  target_entity String?
  target_id     Int?
  details       Json?
  ip_address    String?
  user_agent    String?
  timestamp     DateTime?
}

model CustomFieldDefinition {
  id               Int                @id @default(autoincrement())
  entity_type      String?
  field_name       String?
  field_type       String?
  label            String?
  required         Boolean?           @default(false)
  options          Json?
  CustomFieldValue CustomFieldValue[]
}

model CustomFieldValue {
  id                    Int                    @id @default(autoincrement())
  field_definition_id   Int?
  CustomFieldDefinition CustomFieldDefinition? @relation(fields: [field_definition_id], references: [id])
  entity_id             Int?
  value                 String?
}

model Tenant {
  id     Int     @id @default(autoincrement())
  name   String?
  slug   String?
  config Json?
}

model Translation {
  id            Int     @id @default(autoincrement())
  key           String?
  language_code String?
  value         String?
}

model Notification {
  id          Int       @id @default(autoincrement())
  user_id     Int?
  User        User?     @relation(fields: [user_id], references: [id])
  title       String?
  message     String?
  type        String?   @default("INFO")
  read        Boolean?  @default(false)
  created_at  DateTime?
  action_link String?
}
